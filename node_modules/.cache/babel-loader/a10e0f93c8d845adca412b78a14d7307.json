{"remainingRequest":"/learn/vuejs/vue-router-spa/node_modules/babel-loader/lib/index.js!/learn/vuejs/vue-router-spa/node_modules/vue-loader/lib/index.js??vue-loader-options!/learn/vuejs/vue-router-spa/src/views/pages/MovieForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/learn/vuejs/vue-router-spa/src/views/pages/MovieForm.vue","mtime":1535290937015},{"path":"/learn/vuejs/vue-router-spa/node_modules/cache-loader/dist/cjs.js","mtime":1533118164117},{"path":"/learn/vuejs/vue-router-spa/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/learn/vuejs/vue-router-spa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nvar list_url = \"http://127.0.0.1:8000/service/movie/list\";\nvar add_url = \"http://127.0.0.1:8000/service/movie/create\";\nvar delete_url = \"http://127.0.0.1:8000/service/movie/delete/\";\nvar update_url = \"http://127.0.0.1:8000/service/movie/update/\";\nexport default {\n  data: function data() {\n    return {\n      fields: [{\n        key: \"id\",\n        label: \"ID\"\n      }, {\n        key: \"title\",\n        label: \"TITLE\"\n      }, {\n        key: \"genre\",\n        label: \"GENRE\"\n      }, {\n        key: \"year\",\n        label: \"YEAR\"\n      }, {\n        key: \"author\",\n        label: \"AUTHOR\"\n      }, {\n        key: \"action\",\n        label: \"ACTION\"\n      }],\n      movies: [],\n      mode: \"add\",\n      form: {\n        title: \"\",\n        genre: \"\",\n        year: \"\",\n        author: \"\"\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.loadData();\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this = this;\n\n      axios.get(list_url).then(function (response) {\n        return _this.movies = response.data;\n      });\n    },\n    addData: function addData() {\n      var _this2 = this;\n\n      axios.post(add_url, this.form).then(function (response) {\n        return _this2.movies = response.data;\n      });\n    },\n    editData: function editData(movie) {\n      this.mode = \"edit\";\n      this.form.id = movie.id;\n      this.form.title = movie.title;\n      this.form.genre = movie.genre;\n      this.form.year = movie.year;\n      this.form.author = movie.author;\n    },\n    resetData: function resetData() {\n      this.mode = \"add\";\n      this.form = {\n        title: \"\",\n        genre: \"\",\n        year: \"\",\n        author: \"\"\n      };\n    },\n    updateData: function updateData() {\n      axios.post(update_url + this.form.id, this.form);\n      this.mode = \"add\";\n      this.movies = [];\n      this.loadData();\n    },\n    deleteData: function deleteData(index, id) {\n      axios.get(delete_url + id).then(this.movies.splice(index, 1));\n    }\n  }\n};",{"version":3,"sources":["MovieForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAA,KAAA,MAAA,OAAA;AAEA,IAAA,WAAA,0CAAA;AACA,IAAA,UAAA,4CAAA;AACA,IAAA,aAAA,6CAAA;AACA,IAAA,aAAA,6CAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,cAAA,CACA;AACA,aAAA,IADA;AAEA,eAAA;AAFA,OADA,EAKA;AACA,aAAA,OADA;AAEA,eAAA;AAFA,OALA,EASA;AACA,aAAA,OADA;AAEA,eAAA;AAFA,OATA,EAaA;AACA,aAAA,MADA;AAEA,eAAA;AAFA,OAbA,EAiBA;AACA,aAAA,QADA;AAEA,eAAA;AAFA,OAjBA,EAqBA;AACA,aAAA,QADA;AAEA,eAAA;AAFA,OArBA,CADA;AA2BA,cAAA,EA3BA;AA4BA,YAAA,KA5BA;AA6BA,YAAA;AACA,eAAA,EADA;AAEA,eAAA,EAFA;AAGA,cAAA,EAHA;AAIA,gBAAA;AAJA;AA7BA,KAAA;AAoCA,GAtCA;AAwCA,SAxCA,qBAwCA;AACA,SAAA,QAAA;AACA,GA1CA;AA4CA,WAAA;AACA,cAAA,oBAAA;AAAA;;AACA,YAAA,GAAA,CAAA,QAAA,EAAA,IAAA,CAAA;AAAA,eAAA,MAAA,MAAA,GAAA,SAAA,IAAA;AAAA,OAAA;AACA,KAHA;AAKA,aAAA,mBAAA;AAAA;;AACA,YACA,IADA,CACA,OADA,EACA,KAAA,IADA,EAEA,IAFA,CAEA;AAAA,eAAA,OAAA,MAAA,GAAA,SAAA,IAAA;AAAA,OAFA;AAGA,KATA;AAWA,cAAA,kBAAA,KAAA,EAAA;AACA,WAAA,IAAA,GAAA,MAAA;AACA,WAAA,IAAA,CAAA,EAAA,GAAA,MAAA,EAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,MAAA,KAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,MAAA,KAAA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,MAAA,IAAA;AACA,WAAA,IAAA,CAAA,MAAA,GAAA,MAAA,MAAA;AACA,KAlBA;AAoBA,eAAA,qBAAA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA;AACA,eAAA,EADA;AAEA,eAAA,EAFA;AAGA,cAAA,EAHA;AAIA,gBAAA;AAJA,OAAA;AAMA,KA5BA;AA8BA,gBAAA,sBAAA;AACA,YAAA,IAAA,CAAA,aAAA,KAAA,IAAA,CAAA,EAAA,EAAA,KAAA,IAAA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,QAAA;AACA,KAnCA;AAqCA,gBAAA,oBAAA,KAAA,EAAA,EAAA,EAAA;AACA,YAAA,GAAA,CAAA,aAAA,EAAA,EAAA,IAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA;AAvCA;AA5CA,CAAA","sourcesContent":["<template>\n  <b-row class=\"justify-content-center\">\n    <b-col md=\"4\">\n      <br>\n      <b-card-group>\n        <b-card title=\"Movie form\">\n          <b-card-body>\n            <b-form>\n              <b-form-group class=\"mb-3\" label=\"Title\">\n                <b-form-input v-model=\"form.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\"></b-form-input>\n              </b-form-group>\n  \n              <b-form-group class=\"mb-3\" label=\"Genre\">\n                <b-form-input v-model=\"form.genre\" type=\"text\" class=\"form-control\" placeholder=\"Genre\"></b-form-input>\n              </b-form-group>\n  \n              <b-form-group class=\"mb-3\" label=\"Year\">\n                <b-form-input v-model=\"form.year\" type=\"text\" class=\"form-control\" placeholder=\"Year\"></b-form-input>\n              </b-form-group>\n  \n              <b-form-group class=\"mb-3\" label=\"Author\">\n                <b-form-input v-model=\"form.author\" type=\"text\" class=\"form-control\" placeholder=\"Author\"></b-form-input>\n              </b-form-group>\n  \n              <b-button variant=\"success\" v-if=\"mode=='add'\" @click=\"addData()\">Save</b-button>\n              <b-button variant=\"outline-success\" v-if=\"mode=='edit'\" @click=\"updateData()\">Update</b-button>\n              <b-button variant=\"outline-success\" v-if=\"mode=='edit'\" @click=\"resetData()\">Cancel</b-button>\n            </b-form>\n          </b-card-body>\n        </b-card>\n      </b-card-group>\n    </b-col>\n\n    <b-col md=\"8\">\n      <br>\n      <b-card-group>\n        <b-card title=\"Movie list\">\n          <b-table :fields=\"fields\" :items=\"movies\">\n            <template class=\"pad\" slot=\"action\" slot-scope=\"row\">\n                    <b-button class=\"btn-edit\" variant=\"warning\" @click=\"editData(row.item)\"><fa-icon icon=\"edit\"></fa-icon></b-button>\n                    <b-button variant=\"danger\" @click=\"deleteData(row.index, row.item.id)\"><fa-icon icon=\"trash-alt\"></fa-icon></b-button>\n</template>\n          </b-table>\n        </b-card>\n      </b-card-group>\n\n      <li>\n        <ul>{{ movies }}</ul>\n      </li>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nconst list_url = \"http://127.0.0.1:8000/service/movie/list\";\nconst add_url = \"http://127.0.0.1:8000/service/movie/create\";\nconst delete_url = \"http://127.0.0.1:8000/service/movie/delete/\";\nconst update_url = \"http://127.0.0.1:8000/service/movie/update/\";\n\nexport default {\n  data() {\n    return {\n      fields: [\n        {\n          key: \"id\",\n          label: \"ID\"\n        },\n        {\n          key: \"title\",\n          label: \"TITLE\"\n        },\n        {\n          key: \"genre\",\n          label: \"GENRE\"\n        },\n        {\n          key: \"year\",\n          label: \"YEAR\"\n        },\n        {\n          key: \"author\",\n          label: \"AUTHOR\"\n        },\n        {\n          key: \"action\",\n          label: \"ACTION\"\n        }\n      ],\n      movies: [],\n      mode: \"add\",\n      form: {\n        title: \"\",\n        genre: \"\",\n        year: \"\",\n        author: \"\"\n      }\n    };\n  },\n\n  mounted() {\n    this.loadData();\n  },\n\n  methods: {\n    loadData: function() {\n      axios.get(list_url).then(response => (this.movies = response.data));\n    },\n\n    addData: function() {\n      axios\n        .post(add_url, this.form)\n        .then(response => (this.movies = response.data));\n    },\n\n    editData: function(movie) {\n      this.mode = \"edit\";\n      this.form.id = movie.id;\n      this.form.title = movie.title;\n      this.form.genre = movie.genre;\n      this.form.year = movie.year;\n      this.form.author = movie.author;\n    },\n\n    resetData: function() {\n      this.mode = \"add\";\n      this.form = {\n        title: \"\",\n        genre: \"\",\n        year: \"\",\n        author: \"\"\n      };\n    },\n\n    updateData: function() {\n      axios.post(update_url + this.form.id, this.form);\n      this.mode = \"add\";\n      this.movies = [];\n      this.loadData();\n    },\n\n    deleteData: function(index, id) {\n      axios.get(delete_url + id).then(this.movies.splice(index, 1));\n    }\n  }\n};\n</script>\n\n<style>\n.justify-content-center {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"src/views/pages"}]}